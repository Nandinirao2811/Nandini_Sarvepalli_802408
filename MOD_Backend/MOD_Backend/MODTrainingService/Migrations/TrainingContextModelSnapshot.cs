// <auto-generated />
using System;
using MODTrainingService.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MODTrainingService.Migrations
{
    [DbContext(typeof(TrainingContext))]
    partial class TrainingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MODTrainingService.Models.Mentor", b =>
                {
                    b.Property<int>("Mentor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Mentor_Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Mentor_Avaliability")
                        .HasColumnType("bit");

                    b.Property<string>("Mentor_EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_FromTimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_LinkedInUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mentor_MobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Mentor_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_PrimarySkill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_ToTimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_University")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mentor_YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Mentor_Id");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("MODTrainingService.Models.Payment", b =>
                {
                    b.Property<int>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Mentor_Amount")
                        .HasColumnType("float");

                    b.Property<int>("Mentor_Id")
                        .HasColumnType("int");

                    b.Property<double>("Payment_Amount")
                        .HasColumnType("float");

                    b.Property<string>("Skill_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Payment_Id");

                    b.HasIndex("Mentor_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MODTrainingService.Models.Technology", b =>
                {
                    b.Property<int>("Skill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Skill_Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Skill_Fees")
                        .HasColumnType("float");

                    b.Property<string>("Skill_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill_TOC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Skill_Id");

                    b.ToTable("Technologys");
                });

            modelBuilder.Entity("MODTrainingService.Models.Training", b =>
                {
                    b.Property<int>("Training_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Mentor_Id")
                        .HasColumnType("int");

                    b.Property<int>("Skill_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Training_EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Training_Progress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Training_Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("Training_StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Training_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training_TimeSlot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Training_Id");

                    b.HasIndex("Mentor_Id");

                    b.HasIndex("Skill_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("MODTrainingService.Models.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("User_Active")
                        .HasColumnType("bit");

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("User_MobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MODTrainingService.Models.Payment", b =>
                {
                    b.HasOne("MODTrainingService.Models.Mentor", "Mentor")
                        .WithMany("Payments")
                        .HasForeignKey("Mentor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODTrainingService.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MODTrainingService.Models.Training", b =>
                {
                    b.HasOne("MODTrainingService.Models.Mentor", "Mentor")
                        .WithMany("Trainings")
                        .HasForeignKey("Mentor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODTrainingService.Models.Technology", "Technology")
                        .WithMany("Trainings")
                        .HasForeignKey("Skill_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODTrainingService.Models.User", "User")
                        .WithMany("Trainings")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
